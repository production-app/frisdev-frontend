generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Session_tb {
  id        Int      @id @default(autoincrement())
  user_id   String?  @db.VarChar(100)
  client_id String?  @db.VarChar(150)
  status    String?  @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Department_tb {
  id             Int       @id @unique @default(autoincrement())
  department     String    @unique @db.VarChar(65)
  division       String?   @db.VarChar(65)
  divisionalHead String?   @db.VarChar(65)
  unitsCount     Int?
  Hod            String?   @db.VarChar(50)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  user           User_tb[]
}

model User_tb {
  id          Int            @id @default(autoincrement())
  email       String         @unique @db.VarChar(50)
  firstName   String         @db.VarChar(50)
  lastName    String?        @db.VarChar(50)
  clerkUserId String         @unique @db.VarChar(200)
  imageUrl    String?        @db.Text
  status      Boolean?       @default(false)
  role        String?        @db.VarChar(20)
  userId      Int?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  departments Department_tb? @relation(fields: [userId], references: [id])
}

model BannerType {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  banners Banner[]
}

model Banner {
  id           String     @id @default(uuid())
  title        String
  content      String
  department   String
  bannerTypeId Int
  image        String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  endDate      DateTime
  startDate    DateTime
  bannerType   BannerType @relation(fields: [bannerTypeId], references: [id])
}

model Job_entry {
  id               Int     @id @default(autoincrement())
  controlNumber    String? @unique @db.VarChar(70)
  customerName     String? @db.VarChar(80)
  sourceOfDocument String? @db.VarChar(90)
  typeofDocument   String? @db.VarChar(90)
  proxyname        String? @db.VarChar(50)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model User_Table {
  id        Int     @id(map: "PK_bf2e74ff2666a76f5a6c6409355") @default(autoincrement())
  firstName String  @db.NVarChar(255)
  lastName  String  @db.NVarChar(255)
  isActive  Boolean @default(true, map: "DF_40126993ef359aab43c2e8e4e4e")
}
